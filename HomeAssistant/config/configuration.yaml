homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 43.000370
  longitude: -89.745470
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 1200
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  # Customization file
  customize: !include customize.yaml
  customize_domain: !include customize_domain.yaml


# Show links to resources in log and frontend
#introduction:

#Limit Data Storage
recorder:
  purge_interval: 2
  purge_keep_days: 5

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
#sun:

# Weather prediction
#sensor:
#  - platform: yr

# Text to speech
tts:
  - platform: google

# Cloud
cloud:

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

#Custom
panel_iframe:
  plexmediaserver:
    title: 'Plex Media Server'
    url: 'http://10.0.0.2:32400/web/'
    icon: mdi:youtube-tv
  radarr:
    title: 'Radarr'
    url: 'http://10.0.0.4:7878/'
    icon: mdi:video
  sonarr:
    title: 'Sonarr'
    url: 'http://10.0.0.5:8989/'
    icon: mdi:television
  headphones:
    title: 'Headphones'
    url: 'http://10.0.0.6:8181/'
    icon: mdi:music
  lazylabrarian:
    title: 'Lazy Librarian'
    url: 'http://10.0.0.12:5299/'
    icon: mdi:book-open-page-variant
  nextcloud:
    title: 'NextCould'
    url: 'http://10.0.0.10:80/'
    icon: mdi:file-cloud
  transmission:
    title: 'Transmission'
    url: 'http://10.0.0.3:9091/'
    icon: mdi:download
  jackett:
    title: 'Jackett'
    url: 'http://10.0.0.7:9117/'
    icon: mdi:arrow-collapse-all
weblink:
  entities:
    - name: Plex Media Server
      url: http://10.0.0.2:32400/web/
      icon: mdi:youtube-tv
    - name: Transmission (Downloads)
      url: http://10.0.0.3:9091/
      icon: mdi:download
    - name: Radarr (Add Movies)
      url: http://10.0.0.4:7878/
      icon: mdi:video
    - name: Sonarr (Add TV Series)
      url: http://10.0.0.5:8989/
      icon: mdi:television
    - name: Headphones (Add Music)
      url: http://10.0.0.6:8181/
      icon: mdi:music
    - name: Jackett (Indexers)
      url: http://10.0.0.7:9117/
      icon: mdi:arrow-collapse-all
    - name: NextCloud
      url: http://10.0.0.10:80/
      icon: mdi:file-cloud
    - name: Lazy Librarian (Add eBooks)
      url: http://10.0.0.12:5299/
      icon: mdi:book-open-page-variant
weather:
  - platform: openweathermap
    name: Weather
    api_key: 
media_player:
  - platform: plex
    entity_namespace: 'plex'
    include_non_clients: true
    scan_interval: 5
    show_all_controls: false
    use_custom_entity_ids: true
    use_episode_art: true
    remove_unavailable_clients: true
    client_remove_interval: 600
#mqtt:
#  broker: 192.168.1.222
#  username: administrator
#  password: PatriotXT154#

#device_tracker:
#  - platform: asuswrt
#    host: 192.168.1.1
#    username: admin
#    password: PatriotXT154#
#    track_new_devices: no
#    consider_home: 180
sensor:
# System Monitor Sensors
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "Â°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  - platform: command_line
    name: Raid Status
    command: "cat /proc/mdstat"
    value_template: '{{ value["md0"][1] }}'
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_free
#MQTT Sensors
#  - platform: mqtt
#    name: Home Temp.
#    state_topic: "home/PlopServerArduino/temperature"
#  - platform: mqtt
#    name: Home Humid.
#    state_topic: "home/PlopServerArduino/humidity"
#Media Sensors
  - platform: sonarr
    host: 10.0.0.5
    api_key: 
    monitored_conditions:
      - series
      - wanted
      - upcoming
      - queue
    days: 5
  - platform: radarr
    host: 10.0.0.4
    api_key: 
    monitored_conditions:
      - movies
      - upcoming
    days: 5
  - platform: transmission
    host: 10.0.0.3
    username: administrator
    password: Humps003
    monitored_variables:
      - 'current_status'
      - 'download_speed'
      - 'upload_speed'
      - 'active_torrents'
      - 'paused_torrents'
      - 'total_torrents'
switch:
#  - platform: tplink
#    name: Living Room Light
#    host: 192.168.1.100
#  - platform: tplink
#    name: Master Bedroom Fan
#    host: 192.168.1.102
#  - platform: tplink
#    name: AC Switch
#    host: 192.168.1.103
#  - platform: tplink
#    name: Master Bedroom Light
#    host: 192.168.1.104
  - platform: rest
    resource: http://192.168.1.247:8126/container/HomeAssistant
    name: Home Assistant
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/PlexMediaServer
    name: Plex Media Server
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Radarr
    name: Radarr
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Sonarr
    name: Sonarr
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Headphones
    name: Headphones
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/LazyLibrarian
    name: Lazy Librarian
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Transmission
    name: Transmission
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Jackett
    name: Jackett
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/NextCloud
    name: NextCloud
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/dockercompose_db_1
    name: NextCloud DB
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
  - platform: rest
    resource: http://192.168.1.247:8126/container/Mosquitto
    name: Mosquitto
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

